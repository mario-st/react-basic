{"version":3,"sources":["Store.jsx"],"names":[],"mappings":"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","file":"Store.js","sourcesContent":["\"use strict\";\n\nimport EventEmitter from 'events';\n\nexport const EVENT_CHANGE = 'change';\n\nclass Store extends EventEmitter {\n\n    /**\n     * initializes an instance of a store\n     * @param {*} dispatcher\n     * @param {Function} register\n     * @param {*} storage\n     */\n    constructor (dispatcher, register, storage) {\n        super();\n        this.stored = storage || {};\n        dispatcher.register(register);\n    }\n\n    /**\n     * execute change event if something was changed in the store\n     * @param {*} action\n     */\n    emitOnChange (action) {\n        if (this.changed) {\n            this.changed = false;\n            this.emit(EVENT_CHANGE, action);\n        }\n    }\n\n    /**\n     * add event listener on change event\n     * @param {Function} fn\n     */\n    onChange (fn) {\n        this.on(EVENT_CHANGE, fn);\n    }\n\n    /**\n     * remove event listener from change event\n     * @param {Function} fn\n     */\n    offChange (fn) {\n        this.removeListener(EVENT_CHANGE, fn);\n    }\n\n    /**\n     * get an item from the store\n     * @param {String} key\n     * @returns {*}\n     */\n    getItem (key) {\n        return this.stored[ key ];\n    }\n\n    /**\n     * add an item to the store\n     * @param {String} key\n     * @param {*} value\n     */\n    setItem (key, value) {\n        if (this.stored[ key ] !== value) {\n            this.stored[ key ] = value;\n            this.changed       = true;\n        }\n    }\n\n    _createListIfNeeded (key) {\n        if (!this.stored[ key ]) {\n            this.stored[ key ] = [];\n        }\n    }\n\n    /**\n     * append an item to a list inside of the store\n     * @param {String} key\n     * @param {*} value\n     */\n    pushItem (key, value) {\n        this._createListIfNeeded(key);\n        this.stored[ key ].push(value);\n        this.changed = true;\n    }\n\n    /**\n     * set an item in a list of items by index\n     * @param {String} key\n     * @param {Number} index\n     * @param {*} value\n     */\n    setIndexedItem (key, index, value) {\n        this._createListIfNeeded(key);\n        if (value !== this.stored[ key ][ index ]) {\n            this.stored[ key ][ index ] = value;\n            this.changed                = true;\n        }\n    }\n\n    /**\n     * removes an item from a list of items by index\n     * @param {String} key\n     * @param {*} value\n     */\n    delIndexedItem (key, value) {\n        this._createListIfNeeded(key);\n        let index = this.stored[ key ].indexOf(value);\n        if (index > -1) {\n            this.stored[ key ].splice(index, 1);\n            this.changed = true;\n        }\n    }\n\n    /**\n     * insert multiple items in the store\n     * @param {Object} obj\n     */\n    setItems (obj) {\n        var keys = Object.keys(obj).filter((value, key) => this.stored[ key ] !== value, this);\n        keys.forEach((key) => this.stored[ key ] = obj[ key ], this);\n        this.changed = keys.length > 0;\n    }\n\n    /**\n     * remove multiple items in the store\n     * @param {String[]} keys\n     */\n    delItems (...keys) {\n        keys = keys.filter((key) => this.stored[ key ], this);\n        keys.forEach((key) => delete this.stored[ key ], this);\n        this.changed = keys.length > 0;\n    }\n\n    /**\n     * remove every item in the store\n     */\n    cleanUp () {\n        this.stored  = {};\n        this.changed = true;\n    }\n\n}\n\nexport default Store;"],"sourceRoot":"/source/"}