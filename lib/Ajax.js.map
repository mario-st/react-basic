{"version":3,"sources":["Ajax.jsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;AAEN,IAAM,OAAO,WAAP,OAAO,GAAY,KAAK,CAAC;AAC/B,IAAM,gBAAgB,WAAhB,gBAAgB,GAAG,kBAAkB,CAAC;AAC5C,IAAM,WAAW,WAAX,WAAW,GAAQ,SAAS,CAAC;AACnC,IAAM,WAAW,WAAX,WAAW,GAAQ,OAAO,CAAC;AACjC,IAAM,cAAc,WAAd,cAAc,GAAK,gBAAgB,CAAC;;IAE3C,IAAI;AAEN,aAFE,IAAI,CAEO,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE;8BAFzC,IAAI;;AAGF,YAAI,CAAC,IAAI,GAAU,OAAO,CAAC;AAC3B,YAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AAC9B,YAAI,CAAC,QAAQ,GAAM,OAAO,IAAI,OAAO,CAAC;AACtC,YAAI,CAAC,QAAQ,GAAM,EAAE,CAAC;KACzB;;iBAPC,IAAI;;4BASD,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE;;;AAC3B,mBAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,UAAC,OAAO;uBAAK,MAAK,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC;aAAA,CAAC,CAAC;SACpG;;;6BAEK,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE;;;AAClC,mBAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,UAAC,OAAO;uBAAK,OAAK,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC;aAAA,CAAC,CAAC;SACrG;;;4BAEI,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE;;;AACjC,mBAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,UAAC,OAAO;uBAAK,OAAK,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC;aAAA,CAAC,CAAC;SACpG;;;4BAEI,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE;;;AAC3B,mBAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,UAAC,OAAO;uBAAK,OAAK,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC;aAAA,CAAC,CAAC;SACpG;;;oCAMY,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE;AAC5C,gBAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC,GAAG,CAAC,CAAC;AACnC,gBAAI,KAAK,EAAE;AACP,mBAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACpB;AACD,gBAAI,IAAI,EAAE;AACN,mBAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClB;AACD,mBAAO,GAAG,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;SAChF;;;kCAEU,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE;AAC3B,gBAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;AACtB,sBAAM,EAAE,GAAG;AACX,oBAAI,EAAI,QAAQ;AAChB,mBAAG,EAAK,GAAG;aACd,CAAC,CAAC;SACN;;;0CAEkB,GAAG,EAAE;;;AACpB,mBAAO,UAAC,GAAG,EAAE,QAAQ,EAAK;AACtB,oBAAI,GAAG,EAAE;AACL,wBAAI,GAAG,CAAC,OAAO,KAAK,WAAW,EAAE;AAC7B,+BAAK,SAAS,CAAC,WAAW,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;qBAC9C,MACI;AACD,+BAAK,SAAS,CAAC,WAAW,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;qBAC9C;iBACJ,MACI,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;AAC9B,2BAAK,SAAS,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;iBAC5C,MACI,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;AACnB,2BAAK,SAAS,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;iBACzC,MACI;AACD,2BAAK,SAAS,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;iBACjC;aACJ,CAAC;SACL;;;6CAEqB,GAAG,EAAE;AACvB,gBAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAE,GAAG,CAAE,CAAC;AACnC,gBAAI,OAAO,EAAE;AACT,uBAAO,CAAC,SAAS,GAAG,YAAM,EACzB,CAAC;AACF,uBAAO,CAAC,KAAK,EAAE,CAAC;AAChB,oBAAI,CAAC,QAAQ,CAAE,GAAG,CAAE,GAAG,IAAI,CAAC;aAC/B;SACJ;;;8BAEM,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE;AACjB,gBAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;AAC/B,gBAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAE,GAAG,CAAE,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;AACrE,eAAG,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;AACrC,mBAAO,GAAG,CAAC;SACd;;;mCA5DkB,GAAG,EAAE;AACpB,mBAAO,GAAG,CAAC;SACd;;;WA3BC,IAAI;;;kBAyFK,IAAI","file":"Ajax.js","sourcesContent":["\"use strict\";\r\n\r\nexport const TIMEOUT          = 10000;\r\nexport const HEADER_DATA_TYPE = \"application/json\";\r\nexport const ERR_TIMEOUT      = \"timeout\";\r\nexport const ERR_DEFAULT      = \"error\";\r\nexport const NOT_AUTHORIZED   = \"not_authorized\";\r\n\r\nclass Ajax {\r\n\r\n    constructor (request, dispatcher, timeout) {\r\n        this._req        = request;\r\n        this._dispatcher = dispatcher;\r\n        this._timeout    = timeout || TIMEOUT;\r\n        this._pending    = {};\r\n    }\r\n\r\n    get (key, url, query, timeout) {\r\n        return this._send(key, url, (fullUrl) => this._genRequest('get', fullUrl, query, null, timeout));\r\n    }\r\n\r\n    post (key, url, query, body, timeout) {\r\n        return this._send(key, url, (fullUrl) => this._genRequest('post', fullUrl, query, body, timeout));\r\n    }\r\n\r\n    put (key, url, query, body, timeout) {\r\n        return this._send(key, url, (fullUrl) => this._genRequest('put', fullUrl, query, body, timeout));\r\n    }\r\n\r\n    del (key, url, query, timeout) {\r\n        return this._send(key, url, (fullUrl) => this._genRequest('del', fullUrl, query, null, timeout));\r\n    }\r\n\r\n    static _createUrl (url) {\r\n        return url;\r\n    }\r\n\r\n    _genRequest (method, url, query, body, timeout) {\r\n        let req = this._req[ method ](url);\r\n        if (query) {\r\n            req.query(query);\r\n        }\r\n        if (body) {\r\n            req.send(body);\r\n        }\r\n        return req.timeout(timeout || this._timeout).set('Accept', HEADER_DATA_TYPE);\r\n    }\r\n\r\n    _dispatch (key, response, err) {\r\n        this._dispatcher.dispatch({\r\n            action: key,\r\n            data  : response,\r\n            err   : err\r\n        });\r\n    }\r\n\r\n    _dispatchResponse (key) {\r\n        return (err, response) => {\r\n            if (err) {\r\n                if (err.timeout === ERR_TIMEOUT) {\r\n                    this._dispatch(ERR_TIMEOUT, response, err);\r\n                }\r\n                else {\r\n                    this._dispatch(ERR_DEFAULT, response, err);\r\n                }\r\n            }\r\n            else if (response.status === 400) {\r\n                this._dispatch(NOT_AUTHORIZED, response);\r\n            }\r\n            else if (!response.ok) {\r\n                this._dispatch(ERR_DEFAULT, response);\r\n            }\r\n            else {\r\n                this._dispatch(key, response);\r\n            }\r\n        };\r\n    }\r\n\r\n    _abortPendingRequest (key) {\r\n        let pending = this._pending[ key ];\r\n        if (pending) {\r\n            pending._callback = () => {\r\n            };\r\n            pending.abort();\r\n            this._pending[ key ] = null;\r\n        }\r\n    }\r\n\r\n    _send (key, url, fn) {\r\n        this._abortPendingRequest(key);\r\n        let req = this._pending[ key ] = fn.call(this, Ajax._createUrl(url));\r\n        req.end(this._dispatchResponse(key));\r\n        return req;\r\n    }\r\n\r\n}\r\n\r\nexport default Ajax;"],"sourceRoot":"/source/"}